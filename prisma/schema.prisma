generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model WeeklyReport {
  id                  String   @id @default(cuid())
  studentName         String
  studentId           Int
  organisation        String
  industrySupervisor  String
  datePrepared        DateTime
  weekNumber          Int
  tasks               Task[]
  plansForNextWeek    String
  totalHours          Float
  isSigned            Boolean  @default(false)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Task {
  id          String       @id @default(cuid())
  day         Int
  date        DateTime
  description String
  hoursSpent  Float
  report      WeeklyReport @relation(fields: [reportId], references: [id], onDelete: Cascade)
  reportId    String
}

model EndOfTermReport {
  id                      String       @id @default(cuid())
  studentName            String
  studentId              Int
  organisation          String
  industrySupervisor    String
  dateOfSubmit          DateTime
  studentComments       String
  supervisorComments    String
  studentSignature      String
  studentSignatureDate  DateTime
  supervisorSignature   String?
  supervisorSignatureDate DateTime?
  scoreItems           ScoreItem[]
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
}

model ScoreItem {
  id          String          @id @default(cuid())
  question    String
  score       Int
  report      EndOfTermReport @relation(fields: [reportId], references: [id], onDelete: Cascade)
  reportId    String
}

model MidInternshipReport {
  id                       String   @id @default(cuid())
  studentName              String
  studentId                String
  organization             String
  supervisor               String
  dateOfVisit              DateTime?
  selfAssessment           String[]
  studentComments          String
  studentSignature         String
  industrySupervisorComments String?
  academicSupervisorComments String?
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
}
